{"ast":null,"code":"export async function login(email, password) {\n  let url = new URL(\"http://localhost:8080\");\n  url.search = new URLSearchParams({\n    t: \"login\",\n    email: email,\n    password: password\n  });\n  return fetch(url, {\n    method: \"GET\",\n    headers: new Headers()\n  });\n}\nexport async function createUser(state) {\n  const url = \"http://localhost:8080\";\n  return fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      t: \"createUser\",\n      email: state.email,\n      password: state.password,\n      username: state.username,\n      phone: state.phone,\n      morada: state.morada,\n      postCode: state.postCode\n    }),\n    headers: new Headers()\n  });\n}\nexport async function createAdmin(state) {\n  const url = \"http://localhost:8080\";\n  return fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      t: \"createAdmin\",\n      email: state.email,\n      password: state.password,\n      username: state.username,\n      phone: state.phone,\n      instituicao: state.selectedIns.label\n    }),\n    headers: new Headers()\n  });\n}\nexport async function createColab(state) {\n  const url = \"http://localhost:8080\";\n  return fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      t: \"createColab\",\n      email: state.email,\n      password: state.password,\n      username: state.username,\n      phone: state.phone,\n      morada: state.morada,\n      postCode: state.postCode\n    }),\n    headers: new Headers()\n  });\n}\nexport async function getAllInsts() {\n  let url = new URL(\"http://localhost:8080\");\n  url.search = new URLSearchParams({\n    t: \"insts\"\n  });\n  return fetch(url, {\n    method: \"GET\",\n    headers: new Headers()\n  });\n}\nexport async function getVisitas(id) {\n  let url = new URL(\"http://localhost:8080\");\n  console.log(id);\n  url.search = new URLSearchParams({\n    t: \"visitas\",\n    user: id\n  });\n  return fetch(url, {\n    method: \"GET\",\n    headers: new Headers()\n  });\n}","map":{"version":3,"sources":["F:/Main/Uni/LI4/Codigo/FrontEnd/src/HTTPRequests.js"],"names":["login","email","password","url","URL","search","URLSearchParams","t","fetch","method","headers","Headers","createUser","state","body","JSON","stringify","username","phone","morada","postCode","createAdmin","instituicao","selectedIns","label","createColab","getAllInsts","getVisitas","id","console","log","user"],"mappings":"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","sourcesContent":["export async function login(email, password) {\r\n  let url = new URL(\"http://localhost:8080\");\r\n  url.search = new URLSearchParams({\r\n    t: \"login\",\r\n    email: email,\r\n    password: password,\r\n  });\r\n\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: new Headers(),\r\n  });\r\n}\r\n\r\nexport async function createUser(state) {\r\n  const url = \"http://localhost:8080\";\r\n\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      t: \"createUser\",\r\n      email: state.email,\r\n      password: state.password,\r\n      username: state.username,\r\n      phone: state.phone,\r\n      morada: state.morada,\r\n      postCode: state.postCode,\r\n    }),\r\n    headers: new Headers(),\r\n  });\r\n}\r\n\r\nexport async function createAdmin(state) {\r\n  const url = \"http://localhost:8080\";\r\n\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      t: \"createAdmin\",\r\n      email: state.email,\r\n      password: state.password,\r\n      username: state.username,\r\n      phone: state.phone,\r\n      instituicao: state.selectedIns.label,\r\n    }),\r\n    headers: new Headers(),\r\n  });\r\n}\r\n\r\nexport async function createColab(state) {\r\n  const url = \"http://localhost:8080\";\r\n\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      t: \"createColab\",\r\n      email: state.email,\r\n      password: state.password,\r\n      username: state.username,\r\n      phone: state.phone,\r\n      morada: state.morada,\r\n      postCode: state.postCode,\r\n    }),\r\n    headers: new Headers(),\r\n  });\r\n}\r\n\r\nexport async function getAllInsts() {\r\n  let url = new URL(\"http://localhost:8080\");\r\n  url.search = new URLSearchParams({\r\n    t: \"insts\",\r\n  });\r\n\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: new Headers(),\r\n  });\r\n}\r\n\r\nexport async function getVisitas(id) {\r\n  let url = new URL(\"http://localhost:8080\");\r\n  console.log(id);\r\n  url.search = new URLSearchParams({\r\n    t: \"visitas\",\r\n    user: id,\r\n  });\r\n\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: new Headers(),\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}