{"ast":null,"code":"export async function login(email, password) {\n  let url = new URL(\"http://localhost:8080\");\n  url.search = new URLSearchParams({\n    t: \"login\",\n    email: email,\n    password: password\n  });\n  var r;\n  await fetch(url, {\n    method: \"GET\",\n    headers: new Headers()\n  }).then(response => response.text()).then(response => {\n    r = response;\n  }).catch(err => console.log(err));\n  return r;\n}\nexport async function createUser(state) {\n  const url = \"http://localhost:8080\";\n  fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      t: \"create\",\n      email: state.email,\n      password: state.password,\n      username: state.username,\n      phone: state.phone,\n      morada: state.morada,\n      postCode: state.postCode\n    }),\n    headers: new Headers()\n  }).then(response => response.text()).then(response => {\n    console.log(response);\n  }).catch(err => console.log(err));\n}","map":{"version":3,"sources":["F:/Main/Uni/LI4/Codigo/FrontEnd/src/HTTPRequests.js"],"names":["login","email","password","url","URL","search","URLSearchParams","t","r","fetch","method","headers","Headers","then","response","text","catch","err","console","log","createUser","state","body","JSON","stringify","username","phone","morada","postCode"],"mappings":"AAAA,OAAO,eAAeA,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,IAAIC,GAAJ,CAAQ,uBAAR,CAAV;AACAD,EAAAA,GAAG,CAACE,MAAJ,GAAa,IAAIC,eAAJ,CAAoB;AAC/BC,IAAAA,CAAC,EAAE,OAD4B;AAE/BN,IAAAA,KAAK,EAAEA,KAFwB;AAG/BC,IAAAA,QAAQ,EAAEA;AAHqB,GAApB,CAAb;AAMA,MAAIM,CAAJ;AAEA,QAAMC,KAAK,CAACN,GAAD,EAAM;AACfO,IAAAA,MAAM,EAAE,KADO;AAEfC,IAAAA,OAAO,EAAE,IAAIC,OAAJ;AAFM,GAAN,CAAL,CAIHC,IAJG,CAIEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJd,EAKHF,IALG,CAKEC,QAAQ,IAAI;AAChBN,IAAAA,CAAC,GAAGM,QAAJ;AACD,GAPG,EAQHE,KARG,CAQGC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARV,CAAN;AAUA,SAAOT,CAAP;AACD;AAED,OAAO,eAAeY,UAAf,CAA0BC,KAA1B,EAAiC;AACtC,QAAMlB,GAAG,GAAG,uBAAZ;AAEAM,EAAAA,KAAK,CAACN,GAAD,EAAM;AACTO,IAAAA,MAAM,EAAE,MADC;AAETY,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBjB,MAAAA,CAAC,EAAE,QADgB;AAEnBN,MAAAA,KAAK,EAAEoB,KAAK,CAACpB,KAFM;AAGnBC,MAAAA,QAAQ,EAAEmB,KAAK,CAACnB,QAHG;AAInBuB,MAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAJG;AAKnBC,MAAAA,KAAK,EAAEL,KAAK,CAACK,KALM;AAMnBC,MAAAA,MAAM,EAAEN,KAAK,CAACM,MANK;AAOnBC,MAAAA,QAAQ,EAAEP,KAAK,CAACO;AAPG,KAAf,CAFG;AAWTjB,IAAAA,OAAO,EAAE,IAAIC,OAAJ;AAXA,GAAN,CAAL,CAaGC,IAbH,CAaQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAbpB,EAcGF,IAdH,CAcQC,QAAQ,IAAI;AAChBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,GAhBH,EAiBGE,KAjBH,CAiBSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBhB;AAkBD","sourcesContent":["export async function login(email, password) {\r\n  let url = new URL(\"http://localhost:8080\");\r\n  url.search = new URLSearchParams({\r\n    t: \"login\",\r\n    email: email,\r\n    password: password\r\n  });\r\n\r\n  var r;\r\n\r\n  await fetch(url, {\r\n    method: \"GET\",\r\n    headers: new Headers()\r\n  })\r\n    .then(response => response.text())\r\n    .then(response => {\r\n      r = response;\r\n    })\r\n    .catch(err => console.log(err));\r\n\r\n  return r;\r\n}\r\n\r\nexport async function createUser(state) {\r\n  const url = \"http://localhost:8080\";\r\n\r\n  fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      t: \"create\",\r\n      email: state.email,\r\n      password: state.password,\r\n      username: state.username,\r\n      phone: state.phone,\r\n      morada: state.morada,\r\n      postCode: state.postCode\r\n    }),\r\n    headers: new Headers()\r\n  })\r\n    .then(response => response.text())\r\n    .then(response => {\r\n      console.log(response);\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}